<!-- ##### SECTION Title ##### -->
Triples

<!-- ##### SECTION Short_Description ##### -->
RDF Triples

<!-- ##### SECTION Long_Description ##### -->
<para>
Representation of RDF statements inside Raptor.  They are
a 3 or 4-tuple of #raptor_term which cover the RDF terms of
URI (%RAPTOR_TERM_TYPE_URI),
Literal (%RAPTOR_TERM_TYPE_LITERAL) and
Blank Node (%RAPTOR_TERM_TYPE_BLANK).
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### ENUM raptor_genid_type ##### -->
<para>

</para>

@RAPTOR_GENID_TYPE_BNODEID: 
@RAPTOR_GENID_TYPE_BAGID: 

<!-- ##### ENUM raptor_term_type ##### -->
<para>

</para>

@RAPTOR_TERM_TYPE_UNKNOWN: 
@RAPTOR_TERM_TYPE_URI: 
@RAPTOR_TERM_TYPE_BLANK: 
@RAPTOR_TERM_TYPE_LITERAL: 

<!-- ##### STRUCT raptor_term ##### -->
<para>

</para>

@world: 
@usage: 
@type: 
@value: 

<!-- ##### UNION raptor_term_value ##### -->
<para>

</para>


<!-- ##### STRUCT raptor_term_literal_value ##### -->
<para>

</para>

@string: 
@datatype: 
@language: 

<!-- ##### FUNCTION raptor_new_term_from_blank ##### -->
<para>

</para>

@world: 
@blank: 
@Returns: 


<!-- ##### FUNCTION raptor_new_term_from_literal ##### -->
<para>

</para>

@world: 
@literal: 
@datatype: 
@language: 
@Returns: 


<!-- ##### FUNCTION raptor_new_term_from_uri ##### -->
<para>

</para>

@world: 
@uri: 
@Returns: 


<!-- ##### FUNCTION raptor_term_copy ##### -->
<para>

</para>

@term: 
@Returns: 


<!-- ##### FUNCTION raptor_term_compare ##### -->
<para>

</para>

@t1: 
@t2: 
@Returns: 


<!-- ##### FUNCTION raptor_term_equals ##### -->
<para>

</para>

@t1: 
@t2: 
@Returns: 


<!-- ##### FUNCTION raptor_free_term ##### -->
<para>

</para>

@term: 


<!-- ##### FUNCTION raptor_term_as_counted_string ##### -->
<para>

</para>

@term: 
@len_p: 
@Returns: 


<!-- ##### FUNCTION raptor_term_as_string ##### -->
<para>

</para>

@term: 
@Returns: 


<!-- ##### FUNCTION raptor_term_ntriples_write ##### -->
<para>

</para>

@term: 
@iostr: 
@Returns: 


<!-- ##### STRUCT raptor_statement ##### -->
<para>

</para>

@world: 
@usage: 
@subject: 
@predicate: 
@object: 
@graph: 

<!-- ##### FUNCTION raptor_statement_compare ##### -->
<para>

</para>

@s1: 
@s2: 
@Returns: 


<!-- ##### FUNCTION raptor_statement_init ##### -->
<para>

</para>

@statement: 
@world: 


<!-- ##### FUNCTION raptor_free_statement ##### -->
<para>

</para>

@statement: 


<!-- ##### FUNCTION raptor_statement_print ##### -->
<para>

</para>

@statement: 
@stream: 
@Returns: 


<!-- ##### FUNCTION raptor_statement_print_as_ntriples ##### -->
<para>

</para>

@statement: 
@stream: 
@Returns: 


<!-- ##### FUNCTION raptor_statement_ntriples_write ##### -->
<para>

</para>

@statement: 
@iostr: 
@Returns: 


