2005-07-18  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_general.c (raptor_init): Added guessing parser

	* configure.ac, Makefile.am: Added raptor_guess.c

	* raptor_guess.c: guessing parser using content type and an
	internal parser

	* raptor_xslt.c (raptor_xslt_parse_start): No need to init column,
	byte locator.

	* raptor_rdfxml.c (raptor_xml_parse_recognise_syntax): Guess that
	application/xml is likely RDF/XML

	* raptor_internal.h: raptor_parser_factory_s gains a
	content_type_handler field.

	* raptor_parse.c (raptor_start_parse): Init locator line, column,
	byte to -1 (unknown)
	(raptor_parse_uri_content_type_handler): Added to handle
	raptor_www content type field return.  Pass on to factory method
	content_type_handler if present.
	(raptor_parse_uri_with_connection): Init
	raptor_parse_uri_content_type_handler to receive raptor_www
	callbacks using raptor_www_set_content_type_handler.
	(raptor_guess_parser_name): Check static buffer size for overflow.
	Add some comments.

	* raptor_xslt.c (raptor_xslt_parse_start): Use
	raptor_parser_copy_user_state

	* raptor_parse.c (raptor_parser_copy_user_state): Added.

	* raptor_internal.h: Added prototype for raptor_parser_copy_user_state

	* tests/ex-58.rdf, tests/ex-58.out, tests/Makefile.am: Added ex-58.
	See http://lists.w3.org/Archives/Public/www-archive/2005Jul/0017.html
	for discussion.

	* raptor_rdfxml.c (raptor_end_element_grammar): When emitting
	literals, handle a datatyped empty literal.  Merge the property
	element/member property element code.

	* tests/ex-57.rdf, tests/ex-57.out, tests/Makefile.am: Added ex-57.
	See http://lists.w3.org/Archives/Public/www-rdf-comments/2005AprJun/0000.html
	for discussion.

2005-07-13  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* turtle_lexer.l: Switch qname, blank node and prefix definitions
	to SPARQL ones.
	(main): Fixes for gcc4

	* turtle_parser.y (main): Fix for gcc4

	* raptor_utf8.c (raptor_unicode_is_xml11_namechar):
	Call raptor_unicode_is_xml11_namestartchar.

2005-07-01  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac: Check for isascii, for parsedate.y

	* parsedate.y: Update source links

2005-06-29  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c (raptor_rss_uplift_fields): Fix valid condition.

	* raptor_rss.c: raptor_rss_uplift_map - added, rss091:pubDate ->
	dc:date in ISO format
	(raptor_rss_uplift_fields): Added, to search for fields to uplift.
	(raptor_rss_uplift_items): Added, to scan items to uplift.
	(raptor_rss_parse_chunk): Call raptor_rss_uplift_items.

2005-06-17  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor.spec.in: License not Copyright header

2005-06-12  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c: update for INN parsedate

	* configure.ac: Look for parsedate in libINN

2005-06-11  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* Makefile.am: Add parsedate.y to EXTRA_DIST

	* configure.ac: Better check for parsedate function

	* raptor_rss.c: Add the time includes for AC_HEADER_TIME

	* configure.ac: Add the standard AC_HEADER_TIME checks.

	* raptor_rss.c: Turn rss091:date into dc:date using a date parsing
	function PARSEDATE_FUNCTION to decode it and strftiem to make the
	new ISO format.

	* configure.ac: Get date parsing code from parsedate, curl
	curl_getdate or raptor parsedate if neither is available.

	* Makefile.am: Add parsedate.c if PARSEDATE defined Build
	parsedate.c from parsedate.y

	* parsedate.y: Fixes to build in raptor

	* parsedate.y: Imported public domain date parsing code from
	http://cvs.php.net/php-src/ext/standard/parsedate.y

2005-06-10  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c: Added Suzan Foster to copyright

2005-06-08  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* rdfdiff.c: Casts for c++

	* win32_raptor_config.h, configure.ac: Bumped version to 1.4.8

	* Snapshotted raptor_1_4_7 for 1.4.7 release

	* libraptor.3: Note no changes in 1.4.6 and 1.4.7

2005-06-07  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_serialize_rdfxmla.c (raptor_new_qname_from_resource):
	Fail to split predicate if entire uri is an XML name - it's
	probably not an absolute URI.

	* raptor_serialize.c (raptor_rdfxml_serialize_statement): Fail to
	split predicate if entire uri is an XML name - it's probably not
	an absolute URI.

	* raptor_namespace.c (raptor_namespaces_find_namespace_by_uri):
	Return NULL if ns_uri is NULL.

2005-06-06  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c (raptor_rss_emit):
	Fix crash when no RSS channel is present (Suzan Foster)

2005-06-01  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* Makefile.am: Added ChangeLog.[2-5]

	* ChangeLog: 2004 to ChangeLog.5

	* raptor_rss.c (raptor_rss_parser_processNode): Copy attribute
	value before storing in the item field.

2005-05-25  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xslt.c: docs

2005-05-22  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac: Test for libxslt/xslt.h as well as library, and
	disable if missing.

2005-05-19  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac, win32_raptor_config.h: Bumped version to 1.4.7

	* Snapshotted raptor_1_4_6 for 1.4.6 release

	* win32/Makefile.am, win32/rapper.vcproj, win32/raptor.sln,
	win32/raptor.vcproj, win32/raptortest.vcproj: Import configuration
	from John Barstow

	* win32/README.txt: updates

	* win32_raptor_config.h: Switch to libxml

	* win32_raptor_config.h: Spelling: RAPTOR_INLINE

	* raptor_general.c (raptor_init): Added conditionals around
	serializers: RAPTOR_SERIALIZER_RDFXML/NTRIPLES/RDFXML_ABBREV

	* Makefile.am: Added conditionally included
	RAPTOR_SERIALIZER_RDFXML_ABBREV

	* configure.ac: Added --enable-serializers=LIST and serializers to
	summary.  Reformat other help messages to match.

2005-05-18  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* turtle_parser.y: (main) Move filename here

	* configure.ac: Add proper check for libxslt

	* configure.ac: default memory-signing no

	* configure.ac, rdfdump.c: Bugs to http://bugs.librdf.org/

2005-05-17  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_identifier.c, raptor_parse.c, raptor_serialize.c,
	raptor_serialize_rdfxmla.c, raptor_sax2.c, raptor_rdfxml.c: Casts
	for RAPTOR_FREE

	* configure.ac: usage message formatting

	* raptor_general.c (raptor_free_statement): Casts for RAPTOR_FREE

	* configure.ac: Added --with-memory-signing raptor signing memory
	debugging Reformatted some other --with help messages.

	* raptor_general.c (raptor_sign_malloc, raptor_sign_calloc,
	raptor_sign_realloc, raptor_sign_free): Added raptor signing
	memory debugging trigged by RAPTOR_MEMORY_SIGN.

	* raptor_internal.h: Added raptor signing memory debugging trigged
	by RAPTOR_MEMORY_SIGN

	* n3_lexer.l: Use RAPTOR_MALLOC, RAPTOR_FREE

	* n3_parser.y, turtle_parser.y (directive, resource): Use
	RAPTOR_MALLOC, RAPTOR_FREE

	* turtle_lexer.l: Use RAPTOR_MALLOC, RAPTOR_FREE

	* rdfdiff.c:
	(rdfdiff_new_file, rdfdiff_new_blank) Use RAPTOR_MALLOC rather
	than strdup.

	* raptor_www_curl.c (raptor_www_curl_header_callback): Use
	RAPTOR_MALLOC on type field data.

	* rdfdump.c: Add raptor_finish() before usage exit

2005-05-13  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c: Casts for C++

	* raptor_serialize_rdfxmla.c (raptor_rdfxmla_serialize_init,
	raptor_rdfxmla_serialize_terminate): Init/free rdf_xml_literal_uri
	for the rdf:XMLLiteral URI.
	(raptor_rdfxmla_serialize_statement): Turn datatyped literals that
	are rdf:XMLLiteral into inline XML, not escaped.

2005-05-12  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_serialize.c (raptor_rdfxml_serialize_init,
	raptor_rdfxml_serialize_terminate): Init/free rdf_xml_literal_uri
	for the rdf:XMLLiteral URI.
	(raptor_rdfxml_serialize_statement): Turn datatyped literals that
	are rdf:XMLLiteral into inline XML, not escaped.

2005-05-10  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac: Change quotes around bison test

	* configure.ac: Try to work for older bison version styles

2005-05-08  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c:
	Update from Suzan Foster to reflect the latest status of the
	enclosure vocabulary and allow multiple common items and fields.
	Fields in items are now a linked list of raptor_rss_field items.
	(raptor_rss_context_init): Empty common area.
	(raptor_enclosure_free): Use raptor_enclosure_free to empty enclosure
	list.
	(raptor_rss_field_free): Added to free a list of rss fields.
	(raptor_clear_rss_item): Use raptor_rss_field_free for freeing
	duplicate fields.
	(raptor_clear_rss_common_items): added to empty common item field
	lists.
	(raptor_rss_context_terminate): Empty common item fields with
	raptor_clear_rss_common_items.
	(raptor_rss_new_field): Added.
	(raptor_rss_enclosure_add): Added.
	(raptor_rss_field_add): Added to add a new field value to the list of
	values for one field item.
	(raptor_rss_common_add): Added to add a new common item to the list
	of common items for the current type.
	(raptor_rss_common_get): Added to get the last common item for the
	current type.
	(raptor_rss_parser_processNode): Updates for new fields structure.
	(raptor_rss_insert_enclosure_identifiers): Update for handling uris
	and bnodes.
	(raptor_rss_insert_identifiers): Update for lists for common items
	and lists of ields.
	(raptor_rss_emit_enclosure): Update for handling uris and bnodes.
	(raptor_rss_emit_item, raptor_rss_emit, raptor_rss10_move_statements,
	raptor_rss10_store_statement, raptor_rss10_serialize_statement,
	raptor_rss10_build_xml_names): Updates for lists of common items and
	lists of fields.
	(raptor_rss10_emit_item): Added fix for moving fields to the item
	when they got stuck on the enclosure when the enclosure uri = the guid.
	Updates for lists of common items and lists of fields.
	(raptor_rss10_serialize_end): Updates for lists of common items and
	lists of fields.

2005-05-04  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* win32_raptor_config.h: Added SIZEOF_UNSIGNED_SHORT

2005-04-17  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* autogen.sh: allow envariables to override the programs

2005-04-16  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_iostream.c (raptor_string_iostream_finish):
	Fixes bug 0000021: the output of to_string for an empty model should
	always be parsable and result in an empty model
	http://bugs.librdf.org/mantis/view.php?id=21

	* raptor_iostream.c (raptor_string_iostream_finish):
	Return an empty string "" (aka 1
	byte, \0) when the stringbuffer is NULL, do not return the NULL.

2005-04-14  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_parse.c: docs typo

2005-04-11  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* tests/Makefile.am, tests/ex-56.out, tests/ex-56.rdf:
	Added ex-56 test that relative URIs in datatypes work (Graham Klyne)

2005-04-08  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xml_writer.c, raptor_serialize_rdfxmla.c,
	raptor_serialize.c, raptor_rdfxml.c, raptor_parse.c,
	raptor_general.c: Add missing switch cases to make -Wswitch-enum
	happy.

	* configure.ac: More gcc -W flags in maintainer mode.

	* raptor_xslt.c: Casts for C++

2005-04-07  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xslt.c (raptor_init_parser_grddl): Expand grddl parser
	description.

	* libraptor.3:
	Added missing 1.4.5 API changes, adding XML writer features and
	support functions as used by the rdf/xml-abbrev serializer.

	* tests/Makefile.am:
	test should use = not == for string compare portability

2005-04-06  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xslt.c:
	Added a list of XPaths to try, fixed searching for a profile.
	Now handles 2 XHTML forms and XML.
	(raptor_xslt_parse_chunk): Walk through the list of XPaths.
	Do not give an error if no GRDDL is found, 0 triples are ok.

	* raptor_libxml.c (raptor_libxml_error_common):
	Added, passing in prefix and is_fatal
	flag.  Handle NULL ctx and hence NULL parser.
	(raptor_libxml_error, raptor_libxml_generic_error,
	raptor_libxml_fatal_error, raptor_libxml_validation_error): Use the
	new function, share very common code.

	* raptor_parse.c (raptor_parser_error_varargs): Survive a NULL parser.

	* raptor_rdfxml.c (raptor_get_libxml_context,
	 raptor_set_libxml_document_locator,
	 raptor_get_libxml_document_locator): Survive NULL rdf_parser
	 calls.

	* raptor_internal.h: Added
	raptor_libxml_init_generic_error_handlers prototype

	* raptor_xslt.c (raptor_xslt_parse_start): Init column, byte to -1
	(raptor_xslt_xmlStructuredErrorFunc): Added, not tested.
	(raptor_xslt_parse_chunk): Ensure last chunk with is_end is always
	run.  Report error if no XML DOM made.  Set xslt context
	structured error handler to raptor_xslt_xmlStructuredErrorFunc.

2005-04-04  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xslt.c (raptor_xslt_parse_chunk):
	Declare 'nodes' at top of block.
	Init doc_txt/doc_txt_len earlier so do not free junk.
	Get the base URI string from the XML doc if it exists.

2005-03-25  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac: Added --with-xslt-config
	Added grddl parser and checking.
	Added simple search for libxslt needed by grddl.

	* Makefile.am: Added grddl if RAPTOR_PARSER_GRDDL

	* raptor_general.c (raptor_init): Added grddl

	* raptor_libxml.c (raptor_libxml_init_sax_error_handlers):
	Added to just init the
	static error handlers for libxml for grddl.

	* raptor_internal.h:
	Export raptor_libxml_init_sax_error_handlers for grddl.
	Added raptor_init_parser_grddl

	* raptor_xslt.c: Generates triples via in internal rdf/xml parser.
	(raptor_xslt_parse_start): Copy any user-set handlers to the
	internal rdf/xml parser.
	(main): Deleted, experimental code merged.

	* raptor_xslt.c: Reformed test code into parser named 'grddl'
	(raptor_xslt_parse_init, raptor_xslt_parse_terminate,
	raptor_xslt_parse_start, raptor_xslt_parse_chunk,
	raptor_xslt_parse_recognise_syntax,
	raptor_xslt_parser_register_factory, raptor_init_parser_xslt): Added

2005-03-24  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xslt.c: Fix some memory leaks.

	* raptor_xslt.c: Remove commented out standalone xslt

	* Makefile.am: Added bodge raptor_xslt_test

	* raptor_xslt.c: Raptor GRDDL XSLT

	* raptor_parse.c (raptor_parse_chunk): docs

2005-03-10  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* n3_lexer.l, turtle_lexer.l: Tidy to use .|\n to match any char

	* n3_lexer.l, turtle_lexer.l: Added """long literals"""
	Use yyterminate() to end on errors

	* tests/turtle/bad-14.ttl, tests/turtle/test-17.ttl,
	tests/turtle/test-17.out: long literals

	* tests/turtle/Makefile.am:
	Added test-17.ttl bad-14.ttl for long literals

2005-03-06  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_serialize_rdfxmla.c (raptor_new_qname_from_resource):
	Use maximal xml name length for	splitting predicate.

	* raptor_serialize.c (raptor_rdfxml_serialize_statement):
	Use maximal xml name length for	splitting predicate.

2005-02-21  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* examples/Makefile.am: Add gconf-2.0 to grapper args

2005-02-16  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* examples/grapper.c: Added gconf storing of window width/height
	at namespace /apps/grapper

2005-02-14  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* win32_raptor_config.h: Define RASQAL_INLINE to __inline

	* raptor_nfc.c: Change inline to RAPTOR_INLINE

	* raptor_internal.h: Define RAPTOR_INLINE to inline if not alerady
	defined to something else

2005-02-12  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_serialize_rdfxmla.c
	 (raptor_rdfxmla_emit_subject_list_items,
	 raptor_rdfxmla_emit_subject_properties,
	 raptor_rdfxmla_emit_subject, raptor_rdfxmla_serialize_start):
	 Copy base URIs only when they are not NULL.
	(raptor_rdfxmla_serialize_statement): Handle predicate type
	RAPTOR_IDENTIFIER_TYPE_RESOURCE as an alternative.

2005-02-10  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_xml.c (raptor_valid_xml_ID): Just return an error status,
	don't error out here.

2005-02-08  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* Makefile.am: Add n3_lexer.l n3_parser.y to EXTRA_DIST otherwise
	building with --enable-maintainer-mode from tarball will fail.

	* raptor_rss.c: Add RSS enclosures serializing into RSS 1.0
	raptor_rss10_serializer_context gains enclosures sequence
	(raptor_rss10_serialize_init, raptor_rss10_serialize_terminate):
	Init, free enclosures sequence.
	(raptor_rss10_store_statement): If subject isn't an RSS item, see if
	it is an enclosure and if so, set the type.
	(raptor_rss10_serialize_statement): If type is enclosure, walk the
	list of enclosures and add a new one if not seen already.
	(raptor_rss10_emit_item): Add indent arg as this is called recursively.
	Use it to print spaces from the raptor_rss10_spaces constant.
	Only serialize an rdf:about if the item has a URI.
	If field is enc:enclosure, find the enclosure item and write it
	indented further recursively calling raptor_rss10_emit_item.

	* raptor_rss.c: re-comment back item enclosure thing

2005-02-07  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c (raptor_rss_parser_processNode): Do not assign
	'alternate' attribute values when there's no field to use.

2005-02-06  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac, win32_raptor_config.h: Bumped version to 1.4.6

	* Snapshotted raptor_1_4_5 for 1.4.5 release

2005-02-04  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* autogen.sh: Add autoheader and libtoolize to the path search.

	* configure.ac: AM_PROG_LIBTOOL to AC_PROG_LIBTOOL seems to make
	things happier

2005-02-03  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac: In maintainer mode, stop if there is no flex.

	* configure.ac:
	In maintainer mode, stop if flex is too old or YACC is not GNU bison.

	* raptor_libxml.c:
	Use RAPTOR_LIBXML_XMLSAX2INTERNALSUBSET test for a function rather
	than HAVE_LIBXML_SAX2_H test for a header to work on OSX 10.3.x which
	has inconsistent system libxml shared library/headers.

	* configure.ac:
	Test for xmlSAX2InternalSubset so that it checks for the broken OSX
	10.3.x libxml features in the shared library rather than the ones
	declared in the inconsistent header.

2005-02-02  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor.rdf.in: Updates for schema

	* tests/Makefile.am (check-rdfxmla): rdfdiff should read
	$name-rdfxmla.rdf from builddir

2005-02-01  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* rdfdiff.c: C style Move more declarations to start of blocks.

	* rdfdiff.c (rdfdiff_free_file): Restore what I broke.

	* rdfdiff.c: C style Move more declarations to start of blocks.

	* raptor_xml_writer.c (raptor_xml_writer_end_element): Move int
	decl to start of block.

	* raptor_serialize_rdfxmla.c (raptor_unique_id): Terminate string
	right again after I broke it.

	* rdfdiff.c, raptor_serialize_rdfxmla.c: Casts for C++

	* raptor_serialize_rdfxmla.c: C style
	(raptor_rdfxmla_emit_subject_list_items,
	raptor_rdfxmla_emit_subject_properties): Declare i at start of
	block.

	* rapper.1: rdfxml-abbrev

	* rdfdump.c: Widen help formatting for longer serializer name

	* raptor_xml_writer.c: Various C style fixes.
	Make an enum for raptor_xml_writer_flags.
	Added XML_WRITER_ prefixes to macro and defines.
	Moved spaces_buffer to module static.
	Noted struct nsd and namespaces sorting are duplicated code.
	Docucomments for several methods (not yet used by doc system) noting
	use of the flags.

	* Makefile.am: clean rdfdiff

	* Makefile.am: rdfdiff to EXTRA_PROGRAMS for now

	* Imported rdf/xml with abbreviations serializer 'rdfxml-abbrev'
	written by Steve Shepard <steveshep@gmail.com>.  Steve's changes
	are as follows:

	    * Makefile.am: Added dependencies for rdfdiff.c and
	    raptor_serializer_rdfxmla.c

	    * raptor.h: Added RAPTOR_FEATURE enums and api for new xml_writer
	    features that support auto-indentation and auto-empty element
	    detection.

	    * raptor_feature.c: Added support for new xml_writer
	    auto-indentation and auto-empty features.

	    * raptor_general.c: Initialization of rdfxml-abbrev serializer.

	    * raptor_internal.h: Prototype for void
	    raptor_init_serializer_rdfxmla(void);

	    * raptor_serialize_rdfxmla.c: New rdfxml raptor_serializer that
	    handles some of the abbreviations specified by "RDF/XML Syntax
	    Specification (Revised)."

	    * rdfdiff.c: New tool to diff rdf files.

	    * tests/Makefile.am: Added tests for rdfdiff and the
	    rdfxml-abbrev serialization format.
	
2005-01-26  Dave Beckett  <Dave.Beckett@bristol.ac.uk>
	* rapper.1: mention what RSS tag soup can do

	* turtle_parser.y, n3_parser.y: Rename
	raptor_new_triple/raptor_free_triple to have n3/turtle in the
	name.

	* raptor_internal.h, raptor_general.c, n3_parser.y, n3_lexer.l,
	n3_common.h, configure.ac, Makefile.am: Update Notation3 code with
	later Turtle improvements.  Built it with maintainer mode only.

	* turtle_lexer.l (turtle_copy_token): Renamed from copy_token
	(turtle_copy_string_token): Renamed from copy_string_token.
	(main): filename moved here from global!

2005-01-24  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c (raptor_rss_emit_item): Do not emit an items
	property, that's only done by raptor_rss_emit_connection.

2005-01-22  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c: Added RSS1.1 namespace http://inamidst.com/rss1.1/
	(raptor_rss_parser_processNode): Turn Channel into RSS type channel.
	(raptor_rss_emit_type_triple, raptor_rss_emit_enclosure,
	raptor_rss_emit_item, raptor_rss_emit_connection, raptor_rss_emit):
	Add error return value and stop if there is no identifier.
	(raptor_rss_emit): Stop if channel or any item has no identifier.
	(raptor_rss_parse_chunk): Pass on failures from above to user.
	(raptor_rss10_build_xml_names): Replace RSS1.1 namespace with RSS1.0
	(raptor_rss10_emit_item): Add item_type arg and use it to only emit
	items for the channel.

2005-01-21  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor.h: Added const to src arg of
	raptor_ntriples_string_as_utf8_string.

	* libraptor.3: Deprecate raptor_ntriples_string_as_utf8_string

	* raptor.h: Deprecate raptor_ntriples_string_as_utf8_string -
	rather too internal to be useful, since it only works with a
	parser.

	* ntriples_parse.c (raptor_ntriples_term_valid): Remove rdf_parser
	arg; only for a fatal error - just die.
	(raptor_ntriples_term): Make start a const arg.  When copying UTF8
	bytes, move on the correct number of bytes in src and dest.
	Update use of raptor_ntriples_term_valid.
	(raptor_ntriples_string_as_utf8_string,
	raptor_ntriples_parse_line): Update uses of
	raptor_ntriples_term_valid.

2005-01-17  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_general.c (raptor_statement_part_as_counted_string):
	Declare language_len to NULL, uri_string as unsigned char*.

2005-01-16  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c (raptor_rss10_emit_item): Copy original base_uri
	each time, a raptor_new_xml_element is made and don't lose the
	original reference.

	* raptor_xml_writer.c (main): Copy original base_uri each time,
	don't lose the original reference.

2005-01-15  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_general.c (raptor_statement_part_as_counted_string):
	Initialise language_len, uri_string used in some cases to prevent
	gcc warnings.

	* configure.ac, win32_raptor_config.h: Bumped version to 1.4.5

	* Snapshotted raptor_1_4_4 for 1.4.4 release

	* raptor_rss.c (raptor_rss10_emit_item): Portability - declare
	rdf_Seq* variables at start of block.

2005-01-13  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* win32_raptor_config.h, win32/Makefile.am, win32/rapper.dsp,
	win32/raptor.dsp, win32/raptor.dsw, win32/raptortest.dsp: win32
	build update (patch from Dave Viner)

	* win32_raptor_config.h:
	RAPTOR_INTERNAL should be defined in the build configuration

2005-01-12  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_rss.c: Recognise old RSS 0.9 namespace and handle it as
	rss 1.0.

2005-01-04  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* raptor_serialize.c:
	(raptor_rdfxml_serialize_start,
	raptor_rdfxml_serialize_statement): Only copy non-NULL base URIs

	* raptor_rss.c:
	(raptor_rss10_move_statements, raptor_rss10_store_statement,
	raptor_rss10_build_xml_names, raptor_rss10_emit_item):Handle
	predicates of type RAPTOR_IDENTIFIER_TYPE_RESOURCE as well as type
	RAPTOR_IDENTIFIER_TYPE_PREDICATE

	* raptor_general.c (raptor_free_statement): Free predicate URIs
	that were RAPTOR_IDENTIFIER_TYPE_RESOURCE

	* raptor_uri.c (raptor_uri_to_relative_counted_uri_string):
	Handle no path in base URI
	(main): Add test for that and test for no path in both.

	* raptor_uri.c (raptor_uri_to_relative_counted_uri_string): Handle
	no path in reference URI
	(main): Add test for that

2005-01-03  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* configure.ac, win32_raptor_config.h: Bumped version to 1.4.4

	* Snapshotted raptor_1_4_3 for 1.4.3 release

	* raptor_rdfxml.c (raptor_xml_start_element_handler): Updates for
	unsigned char* string namespace URI strings.

	* raptor_namespace.c:
	Turn namespace URI string constants into unsigned char* strings.

	* raptor_identifier.c (raptor_identifier_print): Casts for
	printing rdf:XMLLiteral URI string constant.

	* raptor_general.c: Turn rdf:XMLLiteral URI string constant into a
	unsigned char* string.
	(raptor_print_statement, raptor_print_statement_part_as_ntriples):
	Casts for printing above constants.

	* raptor_uri.c (raptor_default_new_uri_for_rdf_concept): Use RDF
	namespace URI string constants.

	* Makefile.am: Link libraptor.la for URI tests, to get the
	namespace URI string constants.

	* raptor.h: Turn namespace URI string constants into unsigned
	char* strings.  Change namespace URI defines into uses of the
	constants.

	* rdfdump.c (main): Init parser_feature and serializer_feature to
	-1 to avoid compiler warnings.

	* raptor_rss.c (raptor_rss10_serialize_statement): Init item to
	NULL to avoid a compiler warning.

	* rdfdump.c, raptor_uri.c, raptor_serialize.c, raptor_rss.c,
	raptor_parse.c: Casts for c++

	* raptor.h: remove old comment re xml writer

2005-01-02  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* rdfdump.c: set serializer features before starting to serialize

	* rdfdump.c: Actually set parser feature values again.  Set
	strings for parser or serializer string feature values.

	* raptor_general.c: 2005 copyrights

	* rapper.1: No simple output format anymore

	* rapper.1: Added RSS 1.0 ref

2005-01-01  Dave Beckett  <Dave.Beckett@bristol.ac.uk>

	* rapper.1: Update for new parser, serializers, xmlns syntax

	* raptor_serialize.c (raptor_serializer_set_feature_string): Docs,
	and return values for integer value features
	(raptor_serializer_get_feature_string): Return a new string for
	the start uri if set.

	* raptor_parse.c (raptor_parser_set_feature_string): Docs, and
	return values for integer value features

	* libraptor.3, raptor.h:
	Added raptor_uri_to_counted_string and raptor_uri_to_string

	* raptor_uri.c (raptor_uri_to_counted_string,raptor_uri_to_string):
	Added.

	* libraptor.3: changelog edit - cluster 1.4.3 entries by class

	* libraptor.3: Added raptor_parser_get_feature_string,
	raptor_parser_set_feature_string,
	raptor_serializer_set_feature_string,
	raptor_serializer_get_feature_string, raptor_feature_value_type,
	raptor_namespaces_find_namespace_by_uri

	* raptor_serialize.c, raptor_general.c:
	Use raptor_rdf_namespace_uri and raptor_rdf_namespace_uri_len to
	replace some constants.

	* raptor_serialize.c (raptor_rdfxml_serialize_statement):
	Handle ordinal subject and objects.

	* raptor_serialize.c:
	Add XML Writer to raptor_rdfxml_serializer_context, delete depth.
	(raptor_rdfxml_serialize_init): Delete depth stuff.
	(raptor_rdfxml_serialize_terminate): Tidy up xml writer, namespaces
	and rdf:RDF element.
	(raptor_rdfxml_serialize_declare_namespace): Don't copy uri, prefixes
	since raptor_new_namesapce_from_uri copies them anyway.
	(raptor_rdfxml_serialize_start): Convert to use xml writer.
	(raptor_rdfxml_serialize_write_xml_attribute): Deleted.
	(raptor_rdfxml_serialize_statement, raptor_rdfxml_serialize_end):
	Convert to use xml writer.

	* raptor_xml_writer.c (raptor_xml_writer_empty_element): Ensure
	namespace declarations are removed at end of element.

	* raptor.h: Added raptor_namespaces_find_namespace_by_uri

	* raptor_namespace.c (raptor_namespaces_find_namespace_by_uri): Added.

	* libraptor.3, raptor_sax2.c, raptor_rss.c, raptor.h:
	raptor_xml_declare_namespace renamed to
	raptor_xml_element_declare_namespace

	* raptor_rss.c (raptor_rss10_build_xml_names): Use
	raptor_xml_declare_namespace

	* raptor_rss.c:
	(raptor_rss10_build_xml_names): Use raptor_xml_declare_namespace

	* raptor_sax2.c, raptor.h:
	raptor_sax2_declare_namespace renamed to raptor_xml_declare_namespace

	* raptor_serialize.c (raptor_new_serializer):
	Default to emitting relative URIs

	* raptor_serialize.c (raptor_rdfxml_serialize_ok_xml_name): Deleted.
	(raptor_rdfxml_serialize_statement): Replace use of
	raptor_rdfxml_serialize_ok_xml_name with raptor_xml_name_check for
	XML 1.0 names.

	* raptor_sax2.c, raptor_rdfxml.c, raptor.h, libraptor.3:
	Rename raptor_xml_element_get_element to raptor_xml_element_get_name

	* raptor_rss.c: Added rss:image and rss:textinput properties

	* raptor_rss.c (raptor_rss10_store_statement):
	Don't lose statements that are about
	a known type node, but of unknown predicate.
	(raptor_rss10_serialize_end): Add more debug info on remaining
	statements.

	* raptor_rdfxml.c (raptor_start_element_grammar):
	Update raptor_new_xml_writer call.

	* raptor.h: raptor_new_xml_writer gets nstack parameter.
	raptor_xml_writer_start_namespace_full deleted

	* libraptor.3: raptor_new_xml_writer gets nstack param.
	raptor_xml_writer_start_namespace_full gone

	* raptor_general.c (raptor_free_statement): Don't free null pointers.
