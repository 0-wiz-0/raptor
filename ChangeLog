2007-09-15  Dave Robillard <dave@drobilla.net>

	* src/raptor.h, src/raptor_uri.c: (raptor_uri_handler): Move new
	raptor_uri_compare method to end of struct to limit ABI breakage.

2007-09-15  Dave Beckett  <dave@dajobe.org>

	* src/raptor_internal.h, src/raptor_parse.c, src/raptor_rdfxml.c,
	src/raptor_set.c: Make raptor_set_test less chatty

	* tests/turtle/Makefile.am: Re-added test-30 now it's in SVN

	* tests/turtle/test-30.out, tests/turtle/test-30.ttl: test-30 for @base

2007-09-15  Dave Robillard <dave@drobilla.net>

	* docs/tmpl/section-uri.sgml, src/raptor.h, src/raptor_abbrev.c,
	src/raptor_uri.c: (raptor_uri_compare): Added for librdf
	overloading (rather than using strcmp directly).

	* tests/turtle/Makefile.am: Remove references to nonexistant test-30

	* src/raptor_abbrev.c, src/raptor_internal.h,
	src/raptor_serialize_rdfxmla.c, src/raptor_serialize_turtle.c: Use
	AVL tree rather than sequence for abbreviated serialisers (turtle
	& rdfxmla), significant performance improvement for large
	serialisations.
	(raptor_abbrev_node_lookup): Use AVL tree search against
	abbrev_node instead of linear sequence search.
	(raptor_abbrev_node_cmp): Adapt old raptor_abbrev_node_equals to
	provide strcmp-like ordering.
	(raptor_abbrev_node_equals): Change to trivial wrapper around new
	raptor_abbrev_node_cmp.

2007-09-14  Dave Robillard <dave@drobilla.net>

	* src/raptor_serialize_turtle.c: Fix unwanted blank line at end of
	Turtle list abbreviation.  e.g. before:
	:foo :bar (
	    1
	    2
		3

	) .

	after:

	:foo :bar (
	    1
	    2
	    3
	) .

2007-09-11  Dave Beckett  <dave@dajobe.org>

	* src/turtle_lexer.l, src/turtle_parser.y: Added turtle @base

	* tests/turtle/Makefile.am: Adde test-30 for @base

2007-09-08  Dave Beckett  <dave@dajobe.org>

	* src/raptor_sax2.c: (raptor_sax2_finish): Reset libxml error
	handlers to defaults.
	Fixes Issue#0000232 http://bugs.librdf.org/mantis/view.php?id=232

2007-09-06  Dave Beckett  <dave@dajobe.org>

	* src/turtle_common.c: docs fix

2007-09-03  Dave Beckett  <dave@dajobe.org>

	* src/turtle_lexer.l: {QUOTEDURI}: Apply turtle escapes to URIs

	* tests/turtle/test-29.out, tests/turtle/test-29.ttl: Fix line
	endings of test-29

	* tests/turtle/Makefile.am, tests/turtle/test-29.out,
	tests/turtle/test-29.ttl: test-29: Test all ntriples/turtle
	escapes U+0001 to U+007F

	* src/snprintf.c: Define __USE_ISOC99 to 1

	* src/raptor_rss.c: (raptor_rss_end_element_handler): Fixed a bug
	that silently discarded non-empty fields -- oops.

	* src/raptor_rss.c: raptor_rss_uplift_map: copy atom:updated to
	dc:date

	* configure.ac: Make sure to define HAVE_CURL_CURL_H when
	curl/curl.h is found

2007-09-01  Dave Beckett  <dave@dajobe.org>

	* docs/libraptor.3: Added RDFa

2007-08-28  Dave Beckett  <dave@dajobe.org>

	* docs/libraptor.3: Added description of new 1.4.16 functions

2007-08-27  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: GRDDL and RDFa

	* src/snprintf.c: just leave raptor_format_float for now.

	* docs/rdfcat.c, docs/rdfprint.c, docs/rdfserialize.c: Added C examples

2007-08-26  Dave Beckett  <dave@dajobe.org>

	* docs/raptor-tutorial-parsing.xml: parsing filtering tutorial docs

	* docs/raptor-parsers.xml: GRDDL docs

	* src/raptor_grddl.c: (raptor_grddl_fetch_uri): Set WWW timeout
	from value of new parser feature RAPTOR_FEATURE_WWW_TIMEOUT

	* src/raptor.h, src/raptor_feature.c, src/raptor_parse.c,
	src/raptor_sax2.c, src/raptor_serialize.c,
	src/raptor_turtle_writer.c, src/raptor_xml_writer.c: Added parser
	feature RAPTOR_FEATURE_WWW_TIMEOUT

2007-08-25  Dave Beckett  <dave@dajobe.org>

	* src/raptor_general.c, src/raptor_nfc.c,
	src/raptor_serialize_ntriples.c, src/raptor_xml.c: Use
	raptor_unichar instead of unsigned long for a Unicode codepoint

	* src/raptor_utf8.c: (raptor_unicode_char_to_utf8,
	raptor_utf8_to_unicode_char,
	raptor_unicode_is_xml11_namestartchar,
	raptor_unicode_is_xml10_namestartchar,
	raptor_unicode_is_xml11_namechar, raptor_unicode_is_xml10_namechar
	raptor_unicode_is_namestartchar, raptor_unicode_is_namechar):
	Updated to take a raptor_unichar argument.

	* src/raptor_internal.h: Update the raptor_unicode_* functions
	that take a unicode char to use raptor_unichar:
	raptor_unicode_is_namestartchar and raptor_unicode_is_namechar

	* src/raptor.h: Define raptor_unichar for a Unicode codepoint
	instead of unsigned long.  Update the raptor_unicode_* functions
	that take a unicode char to use it: raptor_unicode_char_to_utf8,
	raptor_utf8_to_unicode_char,
	raptor_unicode_is_xml11_namestartchar,
	raptor_unicode_is_xml10_namestartchar,
	raptor_unicode_is_xml11_namechar and
	raptor_unicode_is_xml10_namechar.

	* src/raptor_nfc.h: Remove unused u32

	* src/raptor.h: Document RAPTOR_FEATURE_HTML_LINK

	* src/snprintf.c: raptor_format_float not public

	* docs/libraptor.3: 1.4.16

2007-08-24  Dave Beckett  <dave@dajobe.org>

	* utils/rapper.c: word

2007-08-24  Dave Robillard <dave@drobilla.net>

	* AUTHORS: Test commit (added undeserving self to AUTHORS).

2007-08-24  Dave Beckett  <dave@dajobe.org>

	* tests/turtle/Makefile.am: (check-turtle-serialize-syntaxs):
	srcdir added for diff and cmp

2007-08-19  Dave Robillard <dave@drobilla.net>

	* AUTHORS: Added Dave Robillard

2007-08-19  Dave Beckett  <dave@dajobe.org>

	* utils/rapper.c: words

	* utils/rapper.1: Added -I/--input-uri and -O/--output-uri

	* utils/rapper.c: Added -I/--input-uri and -O/--output-uri to set
	the input/parser base URI and output/serializer base URI directly
	Defaults remain the same - the serializer base URI defaults to the
	input base URI, however it was set.  Tidied the verbose messages
	to mention parser name.  Added a message for the serializer name
	too.

2007-08-18  Dave Beckett  <dave@dajobe.org>

	* src/turtle_parser.y: (raptor_turtle_parser_register_factory):
	Make default application/x-turtle for now

	* src/raptor_parse.c: (raptor_parser_factory_add_mime_type): docs
	were wrong.

	* src/raptor_serialize_dot.c: (raptor_dot_serializer_end): Handle
	a missing base URI.
	Fixes Issue#0000216 http://bugs.librdf.org/mantis/view.php?id=216

2007-08-17  Dave Beckett  <dave@dajobe.org>

	* src/raptor.h: Applied raptor part of symbian portability fix for
	Issue#0000203 http://bugs.librdf.org/mantis/view.php?id=203

2007-08-14  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rdfxml.c: (raptor_rdfxml_parse_recognise_syntax):
	Apply a negative score if html is in the mime type.  Do not
	recognize as rdf if <html is present or the html namespace is
	declared.

2007-08-05  Dave Beckett  <dave@dajobe.org>

	* src/raptor_xml_writer.c: (main) Quieter unit test

	* src/snprintf.c: #ifdef out unused dopr_outch prototype

	* src/turtle_common.c: (raptor_stringbuffer_append_turtle_string):
	Take const string arg.

	* src/raptor_internal.h: Update prototypes for
	raptor_turtle_writer_quoted and raptor_turtle_writer_literal to
	take const string args.

	* src/raptor_turtle_writer.c: (raptor_turtle_writer_quoted,
	raptor_turtle_writer_literal): const string args.
	(main): Unit tests

	* src/raptor_turtle_writer.c: (raptor_turtle_writer_double):
	Renamed from snprint_turtle_double and now goes direct to the
	writer's iostream. Serialize NaN, -INF and INF numbers

	* src/raptor_turtle_writer.c: (raptor_turtle_writer_literal): Use
	raptor_format_float to format decimals.

	* src/Makefile.am: Added snprintf.c

	* src/snprintf.c: (raptor_format_float): Renamed from fmtfp and
	edited to be XSD rules.

	* src/raptor_internal.h: Added raptor_format_float

	* src/raptor_parse.c: (raptor_parse_file_stream): C99

	* tests/turtle/test-28-out.ttl, tests/turtle/test-28.out,
	tests/turtle/test-28.ttl: Update test-28 results for truncating to
	precision

	* tests/turtle/Makefile.am: Remove test-28 from roundtrip exact
	test

	* tests/turtle/Makefile.am: minor fix

	* tests/turtle/Makefile.am: (check-turtle-serialize-syntax): diff
	always in text

	* tests/turtle/test-28-out.ttl: fix expected output

	* tests/turtle/Makefile.am: comment

	* tests/turtle/Makefile.am, tests/turtle/test-28-out.ttl,
	tests/turtle/test-28.out: Check test-28 for exact syntax returned
	as well as triples

2007-08-02  Dave Beckett  <dave@dajobe.org>

	* src/raptor_parse.c: (raptor_parse_file_stream): Always NULL
	terminate the read buffer.

	* tests/turtle/Makefile.am, tests/turtle/test-28.out,
	tests/turtle/test-28.ttl: Added test-28.ttl test-28.out for
	serializing xsd:double

2007-07-29  Dave Beckett  <dave@dajobe.org>

	* src/raptor_set.c: (main): Make test silent when successful.

	* src/raptor_avltree.c: remove debug

	* src/raptor_set.c: comment

	* src/raptor_avltree.c: print_string is not needed unless debugging

	* src/raptor_set.c: Switch to use raptor_avltree for ID sets

	* src/raptor_avltree.c, src/raptor_internal.h: Rename constructor
	and destructor

	* src/raptor_avltree.c: (main): Make test silent when successful.

	* src/raptor_avltree.c: Conditionalise detailed AVL-tree debugging

	* src/Makefile.am: Add raptor_avltree_test to TESTS

	* src/Makefile.am, src/raptor_avltree.c, src/raptor_internal.h:
	Added AVL-Tree code

2007-07-19  Dave Beckett  <dave@dajobe.org>

	* src/raptor_serialize.c: docs

2007-07-13  Dave Beckett  <dave@dajobe.org>

	* src/raptor_turtle_writer.c: (snprint_turtle_double): Tidy to
	remove several strlen()s

	* src/raptor_serialize_rss.c: cast

	* src/raptor_serialize_rss.c: (raptor_rss10_serialize_statement):
	Do not debug die when rdf:Seq node is a blank node.

2007-07-08  Dave Beckett  <dave@dajobe.org>

	* src/raptor_serialize_rdfxml.c: (raptor_rdfxml_serialize_start):
	Pass on the xml declaration feature to the xml writer.
	Fixes Issue #0000210 http://bugs.librdf.org/mantis/view.php?id=210

	* src/raptor_grddl.c: struct raptor_grddl_parser_context_s gains
	html_link_processing to enable looking for <html> <link> with
	RDF/XML value.
	(raptor_grddl_parse_init_common): Enable html <link> by default.
	(raptor_rdfa_parse_init): Disable html <link> for RDFA parser.
	(raptor_grddl_parse_chunk): Check for html <link> available as
	well as allowed by feature.

2007-07-05  Dave Beckett  <dave@dajobe.org>

	* docs/tmpl/section-feature.sgml, src/raptor.h,
	src/raptor_feature.c, src/raptor_grddl.c, src/raptor_parse.c,
	src/raptor_sax2.c, src/raptor_serialize.c,
	src/raptor_turtle_writer.c, src/raptor_xml_writer.c: Added
	RAPTOR_FEATURE_HTML_LINK to control GRDDL looking for html <link
	type="application/rdf+xml" href="uri">

2007-07-04  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (grddl_free_xml_context): Free the context
	itself.
	(raptor_grddl_parser_add_parent): Deleted, merged into
	raptor_grddl_new_child_parser.  Delete html:link entry from table
	for now - handle rdf/xml links specially later.
	(raptor_grddl_copy_state): Added, pulled out of
	raptor_grddl_ensure_internal_parser
	(raptor_grddl_ensure_internal_parser): Call
	raptor_grddl_copy_state
	(raptor_grddl_new_child_parser): Added, from
	raptor_grddl_ensure_internal_parser and
	raptor_grddl_parser_add_parent to allocate a new parser rather
	than overwrite the 'internal_parser'.
	(raptor_grddl_fetch_uri): Set/reset the content type handler
	eachtime.
	(raptor_grddl_run_xpath_match): Free URI after calculating
	relative to base.
	(raptor_grddl_run_recursive): Gains filter arg, again.  Use
	raptor_grddl_new_child_parser to make a new (GRDDL) raptor_parser*
	and free it here when done.
	(raptor_grddl_parse_chunk): Add new filter arg to
	raptor_grddl_run_recursive Look for <link
	type="application/rdf+xml" href="URI" /> with RDF expected, not an
	XSLT transform URI.

	* src/raptor_www_curl.c: (raptor_www_curl_header_callback): Handle
	multiple type headers appearing, overwriting - such as during an
	HTTP redirect.

2007-07-03  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_discard_message): Report
	discarded errors when debugging.
	(raptor_grddl_parse_chunk): Run XML then HTML parsing in sequence,
	discarding all errors here.  Restore the error handlers
	afterwards. Move tidying up of buffers to function exit tidying.

	* src/raptor_libxml.c: (raptor_libxml_xmlStructuredErrorFunc):
	Tidy output to say "HTML Parser" not "XML HTML Parser"

2007-07-02  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: style

	* src/raptor_grddl.c: match-table gains: looking for
	<link type="application/rdf+xml" href="URI" />

	* utils/rapper.c: Remove const for print_graph

	* src/raptor_serialize_turtle.c: raptor_turtle_context gains
	rdf_nil_uri. Tidy some error messages to remove ()s
	(raptor_turtle_emit_subject_collection_items): At the object of an
	rdf:rest, if it's blank, check it exists and make it the new
	subject, otherwise check it's a URI called rdf:nil.
	(raptor_turtle_serialize_init, raptor_turtle_serialize_terminate):
	Init/free rdf:rest URI.
	Fixes Issue#0000207 http://bugs.librdf.org/mantis/view.php?id=207

	* tests/Makefile.am, tests/ex-62.rdf: Added ex-62 for Issue#0000207

2007-06-23  Dave Beckett  <dave@dajobe.org>

	* src/snprintf.c: style, ANSI C and std headers

	* src/snprintf.c: Import Public Domain snprintf from mutt:
	http://dev.mutt.org/hg/mutt/file/55cd4cb611d9/snprintf.c Last
	Modified: Tue Aug 08 22:49:12 2006 +0000.

2007-06-20  Dave Beckett  <dave@dajobe.org>

	* raptor.rdf.in: Set Project URI
	Update syntaxes

	* src/raptor_grddl.c: Add XSLT security
	(raptor_init_parser_grddl_common): Deny reading, writing to files,
	creating directories or writing to network.
	(raptor_terminate_parser_grddl_common): Tidy up xslt security prefs.

2007-06-19  Dave Beckett  <dave@dajobe.org>

	* src/raptor.h: raptor_graph_handler without const uri

	* tests/Makefile.am: Add trig dir

	* docs/raptor-parsers.xml: Update GRDDL
	Add RDFa and TRiG

	* utils/rapper.1: Added --show-graphs

	* utils/rapper.c: Added --show-graphs option to print named graph
	URIs as seen

	* tests/trig, tests/trig/Makefile.am, tests/trig/example1.out,
	tests/trig/example1.trig, tests/trig/example2.out,
	tests/trig/example2.trig, tests/trig/example3.out,
	tests/trig/example3.trig: Added TRiG tests

	* configure.ac: Add trig parser support, enabled by default.

	* src/Makefile.am: Added RAPTOR_PARSER_TRIG sharing turtle parser code

	* src/raptor.h: Added raptor_graph_handler
	Added raptor_set_graph_handler

	* src/raptor_parse.c: (raptor_parsers_init): Call
	raptor_init_parser_trig.
	(raptor_set_graph_handler): Added to get graph name callbacks.
	(raptor_parser_set_graph_name): Added internal function.

	* src/turtle_common.h: struct raptor_turtle_parser_s gains trig flag.

	* src/raptor_internal.h: struct raptor_parser_s gains field
	graph_handler Added raptor_init_parser_trig and
	raptor_parser_set_graph_name prototypes.


	* src/turtle_parser.y: Add TRiG support.  New tokens LEFT_CURLY,
	RIGHT_CURL, COLONMINUS ({, } and :-) New token graphName
	(colonMinusOpt): Added for TRiG's optional :-
	(graph): Added for TRiG graph name before { ... graph ... }
	(graphName): Added for TRiG
	(graphBody): Added for TRiG
	(triplesList): Added for TRiG
	(terminatedTriples): Added.
	(statement): uses graph, terminatedTriples
	(triples): Added, pulled out of statement
	(raptor_trig_parse_recognise_syntax): Recognise trig in url.
	(raptor_trig_parser_register_factory): Added for TRiG
	(raptor_init_parser_trig): Added for TRiG

	* src/turtle_lexer.l: Add { } and :- for TRiG

2007-06-12  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_run_grddl_transform_uri): Hack
	locator URI so errors with XSLT are reported against that URI not
	the documents.

	* src/raptor_grddl.c: (raptor_grddl_fetch_uri): Fix accept header

	* src/raptor_grddl.c: Use /* for root element

	* src/raptor_grddl.c: XML @dataview:transformation are only on the
	root element.

	* src/raptor_grddl.c: (raptor_grddl_check_recursive_content_type_handler):
	Renamed from raptor_grddl_check_rdf_content_type_handler since it
	stores all content types now. Check for HTML content type and set
	html_base processing flag 
	(raptor_grddl_run_recursive): Remove allow_rdf flag, always true.


	* src/raptor_grddl.c: struct raptor_grddl_parser_context_s gains
	xinclude_processing and html_base_processing flags.
	(raptor_grddl_parse_init_common): Initialise grddl, xinclude but
	not html base.
	(raptor_rdfa_parse_init): Disable grddl, xinclude and init html
	base.
	(raptor_grddl_run_xpath_match): If html_base_processing is
	enabled, switch XML doc type to XML_HTML for the xmlNodeGetBase()
	call and restore afterwards.
	(raptor_grddl_parse_chunk): Look for HTML or XHTML mime types to
	enable html_base_processing.  Conditionalise XML Include
	processing with xinclude_processing flag.

2007-06-10  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: Debug message madness!
	(raptor_grddl_parse_chunk): After xinclude processing, reserialize
	the document DOM so it can be parsed later as RDF/XML if needed.

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Recognise root
	rdf:RDF element and process as RDF/XML.  Fix RDF/XML parsing of
	doc to not filter triples.

	* utils/rapper.c: If no base URI is given, do not set it

	* src/raptor_grddl.c: (raptor_grddl_run_recursive): Send to right
	parser.

	* tests/ex-61.nt, tests/ex-61.out (from
	/raptor/trunk/tests/ex-61.nt:12321): Rename ex-61.nt to ex-61.out

	* src/raptor_grddl.c: (raptor_grddl_parse_uri_write_bytes):
	Removed.
	(raptor_grddl_run_recursive): Use typedef
	raptor_parse_bytes_context with raptor_parse_uri_write_bytes as a
	handler for starting parse lazily

	* src/raptor_parse.c: Moved raptor_parse_bytes_context to
	raptor_internal.h
	(raptor_parse_uri_write_bytes): No longer static.

	* src/raptor_internal.h: Added raptor_parse_bytes_context Export
	raptor_parse_uri_write_bytes handler for use with GRDDL fetch.

	* src/raptor_parse.c: Added raptor_parse_bytes_context typedef
	(raptor_parse_uri_write_bytes): Use the above to look if this is the
	first time called, and if so, determine the base URI from the user's
	set base URI, the final URI from protocol, or otherwise, the resolved
	URI.  This prevents calling raptor_start_parse() until the first byte
	is seen (and thus the base URI, protocol context is known)
	(raptor_parse_uri_with_connection): Explains the base URI rules in
	detail.  Remove call to raptor_start_parse() and initialse the rpbc
	block.

	* src/raptor_www_curl.c: (raptor_www_curl_update_status): set
	final_uri and call final_uri_handler if set

	* src/raptor_www.c: (raptor_www_set_final_uri_handler): Added.

	* src/raptor.h: Added raptor_www_final_uri_handler typedef.  Added
	raptor_www_set_final_uri_handler prototype.

	* src/raptor_internal.h: raptor_www gains final_uri_userdata and
	final_uri_handler;

	* src/raptor_internal.h: struct raptor_www_s gains a
	checked_status flag

	* src/raptor_www_curl.c: (raptor_www_curl_update_status): Added.
	(raptor_www_curl_write_callback): Call raptor_www_curl_update_status
	from here when first byte arrives, before any parsing.
	(raptor_www_curl_fetch): Move getting final URI earlier - above.

	* src/raptor_www_curl.c: typo

	* tests/Makefile.am, tests/ex-61.nt, tests/ex-61.rdf: Added ex-61

	* src/raptor_www_curl.c: (raptor_www_curl_fetch): Save final URI

	* src/raptor_www.c: (raptor_www_get_final_uri): Added.

	* src/raptor.h: Added raptor_www_get_final_uri prototype

	* src/raptor_internal.h: struct raptor_www_s gains a final_uri field

	* src/raptor_sax2.c: (raptor_sax2_inscope_xml_language): Turn
	xml:lang="" into a NULL result.

	* src/raptor_grddl.c: (raptor_grddl_run_recursive): Zaps error
	handlers on recursive parse when ignore_errors set.

	* src/raptor_grddl.c: (raptor_grddl_fetch_uri): flags
	argument (was ignore_errors) can now send a different accept
	header.
	(raptor_grddl_run_grddl_transform_uri): Call
	raptor_grddl_fetch_uri and expect XSLT.
	(raptor_grddl_run_recursive): Call raptor_grddl_fetch_uri and
	ignore errors.

	* src/raptor_grddl.c: (raptor_grddl_discard_message): Added.
	(raptor_grddl_fetch_uri): Added ignore_errors argument to set the
	raptor_www error handler to raptor_grddl_discard_message
	(raptor_grddl_run_grddl_transform_uri): Do not discard errors from
	raptor_grddl_fetch_uri call.
	(raptor_grddl_run_recursive): Added ignore_errors argument and use
	it to return 0 with no warnings, when errors happen.
	(raptor_grddl_parse_chunk): Run namespace URI recursive grddl
	while discarding errors.  Run head profile URIs recursive grddl
	while discarding errors.

	* src/raptor_grddl.c: (raptor_grddl_run_grddl_transform_doc): Pass
	in an xml context and use the base URI there rather than the
	parser's.
	(raptor_grddl_run_grddl_transform_uri): Pass on the xml context to
	the above.

2007-06-09  Dave Beckett  <dave@dajobe.org>

	* docs/tmpl/section-www.sgml: Added
	raptor_www_set_connection_timeout

	* docs/tmpl/section-feature.sgml: new feature
	@RAPTOR_FEATURE_MICROFORMATS

	* docs/raptor-sections.txt: Added
	raptor_www_set_connection_timeout

	* src/raptor_www_curl.c: (raptor_www_curl_init): Use
	www->connection_timeout.

	* src/raptor_www.c: (raptor_www_new_with_connection): Init
	connection timeout to 10s
	(raptor_www_set_connection_timeout): Added.

	* src/raptor.h: Add raptor_www_set_connection_timeout

	* src/raptor_internal.h: raptor_www gains connection_timeout

	* src/raptor_www_curl.c: (raptor_www_curl_init): Set a 10 second
	connection timeout.

	* src/raptor_libxml.c: (raptor_libxml_xmlStructuredErrorFunc): For
	HTTP error only, append str1 to the error.

	* src/raptor_grddl.c: Use XML base URI passed around with the
	grddl_xml_context.
	(raptor_new_xml_context): Renamed from
	raptor_sequence_push_xml_context, moving sequence push to main
	code.
	(raptor_rdfa_parse_init): Push URI for RDFa in
	raptor_grddl_parse_start.
	(raptor_grddl_parse_start): Add XML context for RDFa here.
	(raptor_grddl_add_transform_xml_context): Renamed from
	raptor_grddl_add_transform_uri
	(raptor_grddl_run_grddl_transform_doc): If there is no parser name
	guessable, return.
	(raptor_grddl_run_grddl_transform_uri): Take a grddl_xml_context*
	arg instead of raptor_uri.

2007-06-06  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: Added grddl_xml_context structure.
	Transform and profile URI raptor_sequences are now sequences of
	grddl_xml_context structures.
	(raptor_sequence_push_xml_context, grddl_free_xml_context): Added.
	(raptor_grddl_parse_init_common): No need for
	raptor_libxml_init_generic_error_handlers, raptor_new_sax2 does
	it.  Initialise raptor_sequence with grddl_free_xml_context.
	(raptor_grddl_add_transform_uri): Use
	raptor_sequence_push_xml_context.
	(raptor_grddl_filter_triples): Use grddl_xml_context for
	profile_uri sequence.
	(raptor_grddl_run_xpath_match): Use grddl_xml_context for URI
	results.
	(raptor_grddl_parse_chunk): Use raptor_sequence_push_xml_context
	for former URI sequences.

	* src/raptor_libxml.c: (raptor_libxml_generic_error): Now
	external, not static.  Call raptor_log_error_varargs direct, no
	mention of sax2, locator is from error_handlers.
	(raptor_libxml_init_generic_error_handlers): Removed.
	(raptor_libxml_xmlStructuredErrorFunc): Add err->str1 to message
	if it's given.

	* src/raptor_www_libxml.c: (raptor_www_libxml_http_error):
	Deleted, no longer needed.
	(raptor_www_libxml_init): Set xml generic error context, but save
	old one.
	(raptor_www_libxml_free): Restore old xml generic error context.

	* src/raptor_www.c: (raptor_www_new_with_connection): Init
	RAPTOR_ERROR_HANDLER_MAGIC
	(raptor_www_set_error_handler): Use error_handlers
	(raptor_www_error_varargs): Removed, merged into raptor_www_error
	(raptor_www_error): Call raptor_log_error_varargs here.

	* src/raptor_sax2.c: (raptor_new_sax2): Set xmlSetGenericErrorFunc
	here with the same context pointer as for structured errors.

	* src/raptor_parse.c: (raptor_new_parser): Init
	RAPTOR_ERROR_HANDLER_MAGIC

	* src/raptor_internal.h: removed
	raptor_libxml_init_generic_error_handlers prototype added
	raptor_libxml_generic_error prototype raptor_www gains
	old_xmlGenericErrorContext for libxml and error_handlers replacing
	older error_data, error_handle.  removed raptor_www_error_varargs
	prototype

	* src/raptor_sax2.c: SAX2 error_handler fix for expat

	* tests/turtle/Makefile.am, tests/turtle/test-27.out,
	tests/turtle/test-27.ttl: Added turtle test test-27 for scope of
	@prefix

2007-06-04  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: Do an additional RDF/XML parse of content
	that is found to be RDF/XML by mime type during recursive GRDDL,
	and an additional parse of the top level content too, if also
	found.

	* src/raptor_parse.c: (raptor_parser_copy_user_state): Copy last
	feature too!

	* src/raptor_parse.c, src/raptor_sax2.c, src/raptor_serialize.c,
	src/raptor_turtle_writer.c, src/raptor_xml_writer.c: Added
	RAPTOR_FEATURE_MICROFORMATS

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Use feature
	RAPTOR_FEATURE_MICROFORMATS to dis/enable checking for hardcoded
	microformats

	* src/raptor_feature.c: C

	* src/raptor_feature.c: raptor_features_list gains
	RAPTOR_FEATURE_MICROFORMATS with name 'microformats'

	* src/raptor.h: Added RAPTOR_FEATURE_MICROFORMATS

	* src/raptor_grddl.c: Remove C++ comment

	* src/raptor_grddl.c: Added MATCH_LAST to stop searching for
	hardcoded sheets.  Add hReview sheet that if matches, stops
	looking for later microformats such as hCard.
	(raptor_grddl_parse_chunk): Use MATCH_LAST to stop looking for
	later hardcoded matches.
	(raptor_init_parser_grddl_common,
	raptor_terminate_parser_grddl_common): Added, called once for
	grddl or rdfa available.

	* src/raptor_parse.c: (raptor_parsers_init): Call
	raptor_init_parser_grddl_common for GRDDL or RDFA parsers.
	(raptor_parsers_finish): Call raptor_terminate_parser_grddl_common
	for GRDDL or RDFA parsers.

	* src/raptor_internal.h: Add prototypes for
	raptor_init_parser_grddl_common and
	raptor_terminate_parser_grddl_common

	* src/raptor_grddl.c: (raptor_grddl_add_transform_uri): Added, to
	add a transformation URI
	(XSLT) for a document, removing duplicate URIs.
	(raptor_grddl_filter_triples, raptor_grddl_parse_chunk): Use
	raptor_grddl_add_transform_uri.

2007-06-03  Dave Beckett  <dave@dajobe.org>

	* configure.ac, src/raptor_grddl.c, src/raptor_internal.h,
	src/raptor_parse.c: Add RDFa parser

2007-05-27  Dave Beckett  <dave@dajobe.org>

	* src/raptor_serialize.c: (raptor_serializer_register_factory):
	Fix debug call with RAPTOR_DEBUG>1
	Fixes Issue#0000195 http://bugs.librdf.org/mantis/view.php?id=195

2007-05-26  Dave Beckett  <dave@dajobe.org>

	* src/raptor_uri.c: (raptor_uri_filename_to_uri_string): Make
	path_max bigger *2, not smaller /4.
	Fixes Issue#0000192 http://bugs.librdf.org/mantis/view.php?id=192

	* src/n3_parser.y: (n3_parser_error): Invoke
	raptor_parser_simple_error with a format string and arg.

	* src/turtle_parser.y: (turtle_parser_error): Invoke
	raptor_parser_simple_error with a format string and arg.

	* src/raptor.h: Allow _declspec and __declspec
	Fixes Issue#0000188 http://bugs.librdf.org/mantis/view.php?id=188

2007-05-23  Dave Beckett  <dave@dajobe.org>

	* docs/tmpl/section-feature.sgml: Add RAPTOR_FEATURE_HTML_TAG_SOUP

2007-05-21  Dave Beckett  <dave@dajobe.org>

	* configure.ac: Check for libxml/nanohttp.h only once the
	xml-config include paths have been setup.

	* configure.ac: Add -Wformat-security

2007-05-14  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Use
	HTML_PARSE_RECOVER if available

	* src/raptor.h, src/raptor_feature.c, src/raptor_grddl.c,
	src/raptor_parse.c, src/raptor_sax2.c, src/raptor_serialize.c,
	src/raptor_turtle_writer.c, src/raptor_xml_writer.c: Added parser
	feature RAPTOR_FEATURE_HTML_TAG_SOUP aka htmlTagSoup for use by
	GRDDL parser

	* src/raptor_libxml.c: debug bogus pointers not fail temporarily

	* src/raptor_rdfxml.c: (raptor_rdfxml_parse_recognise_syntax):
	Move buffer editing to raptor_guess_parser_name.

	* src/raptor_parse.c: (raptor_guess_parser_name): Only run
	recognise_syntax with first N bytes of content

	* src/raptor_grddl.c: debugmsg

	* src/raptor_grddl.c: Use HTML parser when XML parser fails, to
	create a DOM for GRDDLing from invalid/not-WF HTML content.
	raptor_grddl_parser_context_s gains htmlParserCtxt as well as
	xmlParserCtxt and process_this_as_rdfxml GRDDL flag to know when
	to parse the content twice.
	(raptor_grddl_parse_terminate): Tidy htmlParserCtxt.  Add
	MATCH_IS_HARDCODED to match_table just to make it clear.
	(match_table): Re-enable hcalendar and hcard as hardcoded XSLTs
	(raptor_grddl_run_xpath_match): Handle non-namespace elements.
	Handle MATCH_IS_HARDCODED and return on first match.
	(raptor_grddl_parse_chunk): Major change in structure - all
	content passed in is saved until is_end=1, then parsed with XML
	parser and if that fails, HTML parser.  HTML parser is run with no
	errors or warnings.

2007-05-11  Dave Beckett  <dave@dajobe.org>

	* src/turtle_parser.y: (raptor_turtle_parse_recognise_syntax):
	Look for turtle @prefix and rdf namespace use in buffer.

	* src/n3_lexer.l: Add rule to allow a comment on the last line,
	without a final newline

	* src/turtle_lexer.l: Add rule to allow a comment on the last
	line, without a final newline

	* tests/turtle/Makefile.am, tests/turtle/test-26.out,
	tests/turtle/test-26.ttl: Add test-26

2007-05-10  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rdfxml.c: 's

2007-05-09  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rdfxml.c: (raptor_rdfxml_parse_recognise_syntax):
	Recognize rdf entities as namespaces.  Add bonus points for using
	the words rdf and rdf

2007-05-08  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rdfxml.c: (raptor_rdfxml_parse_recognise_syntax):
	Only use first 512 bytes of content for hunting for namespaces.

2007-04-26  Dave Beckett  <dave@dajobe.org>

	* src/raptor_internal.h: struct raptor_www_s loses useless
	old_handler field for www_libxml

	* src/raptor_www_libxml.c: (raptor_www_libxml_init,
	raptor_www_libxml_free): Set, reset generic error func.

	* src/raptor_internal.h: Fix raptor_parse_date prototype

	* src/raptor_libxml.c: (raptor_libxml_init_generic_error_handlers):
	Use xmlSetGenericErrorFunc

	* src/parsedate.y: ANSI C function prototypes.

	* src/parsedate.y: Prototype for raptor_parse_date

2007-04-24  Dave Beckett  <dave@dajobe.org>

	* src/raptor_general.c: raptor_log_level_labels make it the right size

	* src/raptor_grddl.c, src/raptor_parse.c, src/raptor_sax2.c:
	Update for error_handlers arrays.

	* src/raptor_libxml.c: (raptor_libxml_warning): Update for
	error_handlers arrays.  Also do not send an error to the warning
	handlers.
	(raptor_libxml_error_common, raptor_libxml_validation_warning):
	Update for error_handlers arrays.
	(raptor_libxml_xmlStructuredErrorFunc): Add xpath to the error
	message when the domain is XML_FROM_XPATH.  Ignore error_handlers
	if the pointer is bogus.  Use the arrays.  If error_handler is
	NULL, ignore it.

	* src/raptor_general.c: (raptor_error_handlers_init): Init error
	handler array fields and magic field.

	* src/raptor_internal.h: raptor_error_handlers now contains arrays
	of user_data and handlers and a magic field to check that an
	error_handler pointer is valid.

2007-04-22  Dave Beckett  <dave@dajobe.org>

	* autogen.sh: Update autogen.sh

2007-04-14  Dave Beckett  <dave@dajobe.org>

	* src/raptor_serialize_turtle.c: (raptor_turtle_emit_literal,
	raptor_turtle_emit_xml_literal): Send namespace stack to
	raptor_turtle_writer_literal

	* src/raptor_turtle_writer.c: (raptor_turtle_writer_literal): Add
	nspace field and use it to look up if a qname can be used for a
	datatype URI.

	* src/raptor_internal.h: raptor_turtle_writer_literal gains nspace
	field

	* src/raptor_parse.c: (raptor_guess_parser_name): Make suffix
	decoding work again

2007-04-10  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rss.c: (raptor_rss_parse_recognise_syntax): One more
	addition in the neverending guesswork that is rss tag soup.  This
	time for sites that have feed in the DNS name, or just somewhere
	in the URL.

	* src/raptor_parse.c: (raptor_guess_parser_name): Discard suffixes
	that are not '\.[a-zA-Z0-9]+$'

2007-03-27  Dave Beckett  <dave@dajobe.org>

	* configure.ac: Check for curl header after inserting any cflags
	from curl-config.  This lets the curl test work when curl the
	includes are not in the usual places

2007-03-26  Dave Beckett  <dave@dajobe.org>

	* configure.ac, src/win32_raptor_config.h: Bumped version to
	1.4.16

	* Snapshotted raptor_1_4_15 for 1.4.15 release (SVN r12027)

	* src/raptor_grddl.c: (raptor_grddl_parser_register_factory):
	Register XHTML mime type higher, very unlikely another parser is
	dealing with this.

	* src/raptor_rss.c: (raptor_rss_parse_recognise_syntax): Make mime
	type heuristics ignore anything with html in it so XHTML mime type
	is ignored.

2007-03-25  Dave Beckett  <dave@dajobe.org>

	* src/raptor_internal.h: raptor_uri_detail_s gains is_hierarchical
	flag.
	
	* src/raptor_rfc2396.c: (raptor_new_uri_detail): Set
	is_hierarchical flag.
	(raptor_uri_resolve_uri_reference): Handle a non-hierarchical base
	URI.
	Fixes Issue#0000177 http://bugs.librdf.org/mantis/view.php?id=177
	(main): Fix above changes an earlier test:
	From:
	  resolve("foo:", "not_scheme:blah") => "foo:/not_scheme:blah"
	To:
	  resolve("foo:", "not_scheme:blah") => "foo:not_scheme:blah"

	* src/raptor_rfc2396.c: (main): Add test to confirm report from
	Issue#000177 http://bugs.librdf.org/mantis/view.php?id=177

	* utils/rapper.c: Print all informational and help messages to
	stderr.  Only results of parsing and the help (-h/--help) message
	goes to stdout now.

2007-03-22  Dave Beckett  <dave@dajobe.org>

	* src/raptor_xml_writer.c, src/ntriples_parse.c,
	src/raptor_grddl.c, src/raptor_parse.c: Casts for C++

	* examples/grapper.c: Use library variables for license, home page

	* examples/grapper.c: Casts and C99 fixes

	* src/raptor_rss.h: Fix CONTENT_NAMESPACE_URI to correct URI

2007-03-19  Dave Beckett  <dave@dajobe.org>

	* utils/rapper.c: NULL base URI

	* tests/Makefile.am: Set rapper output baseuri to NULL via '-'

	* utils/rapper.1, utils/rapper.c: Allow base uri '-' for no output
	base URI

	* src/raptor_www.c: (raptor_www_fetch): If a request returns a
	status code that is not success, generate an error message.

	* src/raptor_www_curl.c: (raptor_www_curl_fetch): Enhance failure
	error message

2007-03-15  Dave Beckett  <dave@dajobe.org>

	* src/raptor_serialize_rss.c: Adjust the xml:base attribute adding
	to put it next to the raptor_xml_writer_start_element of the root
	element.

	* src/raptor_serialize_rdfxmla.c:
	raptor_rdfxmla_serializer_context gains xml_nspace field.
	(raptor_rdfxmla_serialize_init,
	raptor_rdfxmla_serialize_terminate): Init/free xml namespace.
	(raptor_rdfxmla_ensure_writen_header): Write xml:base when a base
	URI is given.
	Addresses Issue #0000174 http://bugs.librdf.org/mantis/view.php?id=174

	* src/raptor_serialize_rdfxml.c: raptor_rdfxml_serializer_context
	gains xml_nspace field.
	(raptor_rdfxml_serialize_init, raptor_rdfxml_serialize_terminate):
	Init/free xml namespace.
	(raptor_rdfxml_ensure_writen_header): Write xml:base when a base
	URI is given.
	Addresses Issue #0000174 http://bugs.librdf.org/mantis/view.php?id=174

2007-03-12  Dave Beckett  <dave@dajobe.org>

	* src/raptor_rss.c, src/raptor_serialize_rss.c: Replace shared
	nspaces list with one per rss-parser/serializer.

	* src/raptor_rss.h: raptor_rss_namespace_info looses nspace field.

	* src/raptor_rfc2396.c: (raptor_uri_resolve_uri_reference): In
	removing ./ do not go past end of buffer.

2007-03-11  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: struct raptor_grddl_parser_context_s gains
	content_type, content_type_check and stringbuffer for saved
	rdf/xml content.
	(raptor_grddl_parse_terminate): Free any saved content type or
	stringbuffer.
	(raptor_grddl_parse_start): Init type check.
	(raptor_grddl_libxml_discard_error): Restore, for discarding
	validation errors again.
	(raptor_grddl_parse_chunk): If content type was seen and type was
	application/rdf+xml, save content for later parsing as RDF/XML.
	Discard validation errors again.
	(raptor_grddl_parse_content_type_handler): Save content type
	header when passed in.
	(raptor_grddl_parser_register_factory): Register
	raptor_grddl_parse_content_type_handler.

	* src/raptor_parse.c: (raptor_guess_parser_name): Add any mime
	type q <10 to the score, don't lose it entirely.

2007-03-02  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: Alter match_table to look for substrings
	inside html:link@rel and html:a@rel Delete old hard-coded
	transforms for dc: never worked and embedded RDF: grddl profile
	support handles this now.

	* src/raptor_grddl.c: (raptor_grddl_run_grddl_transform_doc):
	Invoke xsltSetGenericErrorFunc here to get the right rdf_parser
	configured.

	* src/raptor_grddl.c: Handles GRDDL W3C Working Draft 2 March 2007

	* src/raptor_grddl.c: (raptor_grddl_libxml_discard_error): Deleted.
	(raptor_grddl_parse_chunk): No longer ignore validation errors
	http://lists.w3.org/Archives/Public/public-grddl-comments/2007JanMar/0062.html

2007-02-15  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_run_grddl_transform_uri):
	Return a warning and do not fail if XSLT sheet is not found
	(raptor_grddl_run_recursive): Return a warning and do not fail if
	the recursive GRDDL doc is not found.
	(raptor_grddl_parse_chunk): Tidy other errors.  Add aborting on
	XInclude failure.

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Do not get/set
	content when there was no internal parser.

	* src/raptor_grddl.c: (raptor_grddl_ensure_internal_parser): Unset
	user_data/statement_handler if filter is not used so that re-using
	the same parser with different filter now works.
	(raptor_grddl_fetch_uri): Add content_type_handler and
	content_type_user_data args and use them to call
	raptor_www_set_content_type_handler if not NULL.
	(raptor_grddl_run_grddl_transform_uri): Update
	raptor_grddl_fetch_uri call
	(raptor_grddl_check_rdf_content_type_handler): Handler to look for
	RDF MIME Type and trigger content saving if so.
	(raptor_grddl_run_recursive): Add allow_rdf argument to allow
	RDF/XML content to be processed if the type is right.
	(raptor_grddl_parse_chunk): For a namespace URI, run recursive and
	allow RDF/XML.  If it was seen on return, create a new "rdfxml"
	parser and run it.  Reorder setting the root_ns_uri profile
	earlier so that it can be recognised as a transform in RDF/XML
	namespace documents.

	* src/raptor_parse.c: (raptor_parse_chunk): If the stringbuffer is
	declared, save a copy of the bytes that pass by.
	(raptor_parser_save_content, raptor_parser_get_content): Added to
	trigger/reset saving content and to get the content back as a new
	string.

	* src/raptor_internal.h: raptor_parser gains a stringbuffer Added
	prototypes for raptor_parser_save_content and
	raptor_parser_get_content

2007-02-12  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_parse_init): Update
	raptor_new_sax2 call. Delete raptor_sax2_set_locator.

	* src/raptor_rss.c: (raptor_rss_parse_init): Update
	raptor_new_sax2 call. Delete raptor_sax2_set_locator.

	* src/raptor_rdfxml.c: (raptor_rdfxml_parse_init): Update
	raptor_new_sax2 call. Delete raptor_sax2_set_locator.

	* src/raptor_www.c: (raptor_www_error_varargs): Call
	raptor_log_error_varargs.

	* src/raptor_parse.c: (raptor_new_parser): Set locator and
	handlers/data in the error_handlers.
	(raptor_parser_fatal_error): Call raptor_log_error_varargs
	(raptor_parser_fatal_error_varargs): Removed.
	(raptor_parser_fatal_error_message_handler): call
	raptor_log_error.
	(raptor_parser_simple_error, raptor_parser_error_varargs,
	raptor_parser_warning): Call raptor_log_error_varargs.
	(raptor_parser_error_message_handler,
	raptor_parser_warning_message_handler): Call raptor_log_error.
	(raptor_set_fatal_error_handler, raptor_set_error_handler,
	raptor_set_warning_handler): Update for error_handlers
	(raptor_parser_copy_user_state): Copy raptor_error_handlers block.

	* src/raptor_sax2.c: (raptor_new_sax2): Just have error_handlers
	arg.  Use xmlSetStructuredErrorFunc for better libxml errors
	(raptor_sax2_set_locator): Removed, not needed.
	(raptor_sax2_simple_error): Call raptor_log_error_varargs.
	(raptor_sax2_parse_start): Call xmlSetStructuredErrorFunc
	(raptor_sax2_parse_chunk): Call raptor_log_error_simple instead of
	directly calling the error handler.

	* src/raptor_libxml.c: (raptor_libxml_call_handler): Removed.
	(raptor_libxml_warning, raptor_libxml_error_common,
	raptor_libxml_validation_warning): Use raptor_log_error_varargs.
	(raptor_libxml_xmlStructuredErrorFunc): Use locator from the
	error_handlers.  Call raptor_log_error.

	* src/raptor_general.c: (raptor_invoke_simple_message_varargs,
	raptor_invoke_message_varargs): Removed internal function.  Added
	raptor_log_level_labels list.
	(raptor_log_error_simple, raptor_log_error_varargs,
	raptor_log_error): Added for new logging.
	(raptor_error_handlers_init): Added to init new structure

	* src/raptor_internal.h: Added raptor_error_handlers structure and
	remove the pointers from raptor_parser, raptor_sax2.  Added
	raptor_log_level enum Removed raptor_invoke_message_varargs,
	raptor_invoke_simple_message_varargs Added
	raptor_error_handlers_init, void raptor_log_error_simple, void
	raptor_log_error_varargs, void raptor_log_error raptor_new_sax2
	now just takes a raptor_error_handler* param
	Removed raptor_sax2_set_locator

	* utils/rapper.c: help text for -t/--trace

2007-02-11  Dave Beckett  <dave@dajobe.org>

	* src/raptor_libxml.c: #if LIBXML_VERSION >= not >

	* utils/rapper.1: Added -t/--trace option to show URIs traversed.

	* utils/rapper.c: Added -t/--trace option to show URIs traversed.
	(rapper_uri_trace): Added.
	(main): If tracing, register rapper_uri_trace as a URI filter
	function with raptor_parser_set_uri to see URis retrieved.

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Call
	xmlSetStructuredErrorFunc to make most errors be printed much nicer.

	* src/raptor_internal.h: Added
	raptor_libxml_xmlStructuredErrorFunc prototype.

	* src/raptor_libxml.c: (raptor_libxml_xmlStructuredErrorFunc):
	Added for sending libxml structured error messages back to a
	parser.

2007-02-10  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: Add XInclude headers
	(raptor_grddl_filter_triples): Renamed from
	raptor_grddl_relay_triples
	(raptor_grddl_filter_triples): Do not pass on triples, just look
	for transformation triples.
	(raptor_grddl_ensure_internal_parser): Add filter arg and if set
	for profile and namespace parsings, send triples via
	raptor_grddl_filter_triples.
	(raptor_grddl_run_grddl_transform_doc): Call
	raptor_grddl_ensure_internal_parser with no filtering when have
	got the resulting string and want to do a specific parse, not a
	recursive GRDDL.
	(raptor_grddl_run_recursive): Call
	raptor_grddl_ensure_internal_parser filtering when doing a
	recursive GRDDL - this is namespace or profile recursion.
	(raptor_grddl_parse_chunk): Run XML include processing.  Do not
	try to call NULL profile URIs.  Fix transformation loop to call
	all transformations, not just first.

	* src/raptor_grddl.c: (raptor_grddl_libxml_discard_error): Added
	to throw away libxml errors.
	(raptor_grddl_parse_chunk): Use raptor_grddl_libxml_discard_error
	to dicard XML validation errors since it seems the GRDDL spec
	doesn't care.

	* src/turtle_parser.y: (raptor_turtle_parse_recognise_syntax):
	Recognise n3 in mime type when N3 parser is not around.
	(raptor_turtle_parser_register_factory): Register low interest in
	text/rdf+n3 when N3 parser is not around.

2007-02-06  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_grddl_parse_chunk): Tidy up doc and
	xpath context on errors or success so that it is initialised next
	time for new documents.

	* src/raptor_grddl.c: (raptor_grddl_parser_add_parent): Do not set
	parent twice

2007-01-31  Dave Beckett  <dave@dajobe.org>

	* configure.ac, src/win32_raptor_config.h: Bumped version to
	1.4.15

	* Snapshotted raptor_1_4_14 for 1.4.14 release (SVN r11863)

2007-01-28  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: (raptor_libxslt_error_common): Added.
	(raptor_grddl_xsltGenericError_handler): Added.
	(raptor_grddl_parse_init): Register
	raptor_grddl_xsltGenericError_handler to handle XSLT generic
	errors.
	(raptor_grddl_run_grddl_transform_doc): Set 'base' and 'Base' XSLT
	parameters to allow some XSLT sheets to work - pragmatism.

	* src/raptor_grddl.c: struct raptor_grddl_parser_context_s gains
	rdf_parser field.  Add lots more debugging messages
	(raptor_grddl_parse_init): Init rdf_parser field.
	(raptor_grddl_parser_add_parent): Relay all triples to the parent
	grddl parser.
	(raptor_grddl_ensure_internal_parser): Lose relay flag - always
	relay.
	(raptor_grddl_parse_chunk): Copy root_ns_uri if not NULL.  When
	processing head profile URIs, strip out the GRDDL profile URI
	before adding them to the grddl_parser->profile_uris sequence.

2007-01-27  Dave Beckett  <dave@dajobe.org>

	* configure.ac: Add AC_CHECK_FUNC(xsltInit)

	* src/raptor_grddl.c: (raptor_init_parser_grddl): Check for xsltInit

	* src/raptor_parse.c: (raptor_parsers_finish): Call
	raptor_terminate_parser_grddl when enabled.

	* src/raptor_internal.h: Added raptor_terminate_parser_grddl prototype

	* src/raptor_grddl.c: Add XML schema namespace to ignored
	namespace list.
	(raptor_grddl_parse_chunk): Copy root namespace URI when adding to
	a list.
	(raptor_terminate_parser_grddl): Added, to free up shared
	resources.

	* docs/libraptor.3: 1.4.14

	* src/raptor_parse.c: autodocs

	* src/raptor_internal.h: Move raptor_turtle_writer to
	raptor_internal.h for now.

	* src/raptor.h: Move raptor_turtle_writer to raptor_internal.h for
	now.

2007-01-26  Dave Beckett  <dave@dajobe.org>

	* src/n3_parser.y, src/ntriples_parse.c, src/raptor_general.c,
	src/raptor_rdfxml.c, src/raptor_rss.c, src/turtle_parser.y: Rename
	raptor_generate_id to raptor_parser_internal_generate_id with
	altered calling convention - pass in ID type

	* src/raptor.h: Adedd prototype for raptor_parser_generate_id

	* src/raptor_internal.h: raptor_parser_internal_generate_id
	renamed from raptor_generate_id.

	* src/raptor_parse.c: (raptor_parser_generate_id): Added as a
	public function, modified from previously internal
	raptor_generate_id().
	(raptor_parser_internal_generate_id): Renamed from
	raptor_generate_id.

2007-01-16  Dave Beckett  <dave@dajobe.org>

	* utils/rapper.c: Add a another raptor_finish() before exit

2007-01-14  Dave Beckett  <dave@dajobe.org>

	* src/raptor_grddl.c: struct raptor_grddl_parser_context_s loses
	xpathObj
	(raptor_grddl_parse_terminate): Remove xpathObj tidy.  Remove
	profile URIs from 'match_table' list of xpaths - now invoked on
	it's own.
	(raptor_grddl_relay_triples): Add relay triples debugging.  Fix
	loop to properly walk through profile URIs
	(raptor_grddl_run_xpath_match): Added to invoke a match to an
	xpath returning a list of URIs as raptor_sequence.  Code removed
	from raptor_grddl_parse_chunk.
	(raptor_grddl_run_recursive): Added to invoke a recursive GRDDL on
	a URI, sending triples back to the current parser.  Code removed
	from raptor_grddl_parse_chunk.
	(raptor_grddl_parse_chunk): Use raptor_grddl_run_recursive to do
	most of the work.  Invoke the <head profile> early on before
	running general XPath matches.  Use raptor_grddl_run_xpath_match
	to run general XPath matches.

	* utils/rapper.c: Use raptor_home_url_string and
	raptor_license_string in short and long usage messages.

	* src/raptor.h: Added raptor_home_url_string (replacing raptor_url)

	* src/raptor_general.c: raptor_home_url_string

	* src/raptor.h: Added raptor_url

	* src/raptor.h: Added raptor_license_string

	* src/raptor_general.c: 2007 and add raptor_license_string

2007-01-07  Dave Beckett  <dave@dajobe.org>

	* src/raptor_abbrev.c: (raptor_new_abbrev_node): Initialise with
	ref_count 1
	(raptor_abbrev_node_lookup): Do not add ref_count here

	* tests/turtle/Makefile.am: (check-turtle-serialize): rdfdiff with
	a local file, not one in $(srcdir)

	* utils/rdfdiff.c: Apply the base URI to the to-file, if given.
	Otherwise use the from_file's URI.

	* tests/turtle/Makefile.am: (check-turtle-serialize): Add base
	URIs for the rdf-schema.ttl and rdfs-namespace.ttl

	* tests/turtle/Makefile.am: (check-turtle-serialize): Ensure it
	dies when a failure happens

	* tests/turtle/Makefile.am: (check-turtle-serialize): Call rdfdiff
	with -u to set base URI for input turtle.  This allows test-00.ttl
	to produce the same absolute URIs each time and for round-trip
	serializing to work.

	* utils/rdfdiff.c: Added -u/--base-uri option to specify the from
	file base URI so that if the from file is a local file or relative
	URI, it can be given an absolute base.

	* tests/turtle/Makefile.am: (check-turtle-serialize): output
	serialization results to .ttl files

	* tests/turtle/Makefile.am: Add check-turtle-serialize to
	check-local

2007-01-05  Dave Beckett  <dave@dajobe.org>

	* src/raptor-config.1: Document --private-libs and explain what it
	is under --libs too.

	* src/raptor-config.in: Add --private-libs and move private @LIBS
	to that from --libs

	* raptor.pc.in: Use Libs.private for internal dynamically linked
	libraries
